{
	"id": "76882464ef99bdc3f9fa4c23b8c234ac",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Wallet/NewWallet.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED;\r\npragma solidity ^0.8.0;\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\r\n\r\ncontract Wallet is Ownable{\r\n\r\n    mapping (address => uint) allowance;\r\n    address _owner;\r\n\r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    \r\n   function isOwner() public view returns(bool) {\r\n\r\n       return _owner == msg.sender;\r\n\r\n   }\r\n\r\n\r\n   function receiveMoney() public payable {\r\n\r\n    } \r\n    \r\n    function addAllowance(address _who , uint _amount) external onlyOwner{\r\n\r\n             allowance[_who] = _amount;\r\n\r\n    }\r\n\r\n\r\n    modifier ownerOrAllowed(uint _amount){\r\n        require(isOwner() || allowance[msg.sender] >= _amount , \"You are not allowed\");\r\n        _;\r\n    }\r\n\r\n\r\n    function withdrawMoney(address payable _to , uint _amount) public ownerOrAllowed(_amount){\r\n            _to.transfer(_amount);\r\n    }\r\n\r\n  \r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Wallet/NewWallet.sol": {
				"Wallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiveMoney",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawMoney",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Wallet/NewWallet.sol\":174:933  contract Wallet is Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"Wallet/NewWallet.sol\":274:326  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"Wallet/NewWallet.sol\":308:318  msg.sender */\n  caller\n    /* \"Wallet/NewWallet.sol\":299:305  _owner */\n  0x02\n  0x00\n    /* \"Wallet/NewWallet.sol\":299:318  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Wallet/NewWallet.sol\":174:933  contract Wallet is Ownable{\r... */\n  jump(tag_10)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Wallet/NewWallet.sol\":174:933  contract Wallet is Ownable{\r... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Wallet/NewWallet.sol\":174:933  contract Wallet is Ownable{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f32d59b\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf274c897\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf3c40c4b\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x6d26ec18\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Wallet/NewWallet.sol\":441:490  function receiveMoney() public payable {\r... */\n    tag_2:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Wallet/NewWallet.sol\":339:432  function isOwner() public view returns(bool) {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Wallet/NewWallet.sol\":791:924  function withdrawMoney(address payable _to , uint _amount) public ownerOrAllowed(_amount){\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"Wallet/NewWallet.sol\":503:625  function addAllowance(address _who , uint _amount) external onlyOwner{\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"Wallet/NewWallet.sol\":441:490  function receiveMoney() public payable {\r... */\n    tag_11:\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_42\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_45\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_46\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Wallet/NewWallet.sol\":339:432  function isOwner() public view returns(bool) {\r... */\n    tag_22:\n        /* \"Wallet/NewWallet.sol\":378:382  bool */\n      0x00\n        /* \"Wallet/NewWallet.sol\":413:423  msg.sender */\n      caller\n        /* \"Wallet/NewWallet.sol\":403:423  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Wallet/NewWallet.sol\":403:409  _owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Wallet/NewWallet.sol\":403:423  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Wallet/NewWallet.sol\":396:423  return _owner == msg.sender */\n      swap1\n      pop\n        /* \"Wallet/NewWallet.sol\":339:432  function isOwner() public view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"Wallet/NewWallet.sol\":791:924  function withdrawMoney(address payable _to , uint _amount) public ownerOrAllowed(_amount){\r... */\n    tag_29:\n        /* \"Wallet/NewWallet.sol\":872:879  _amount */\n      dup1\n        /* \"Wallet/NewWallet.sol\":691:700  isOwner() */\n      tag_50\n        /* \"Wallet/NewWallet.sol\":691:698  isOwner */\n      tag_22\n        /* \"Wallet/NewWallet.sol\":691:700  isOwner() */\n      jump\t// in\n    tag_50:\n        /* \"Wallet/NewWallet.sol\":691:736  isOwner() || allowance[msg.sender] >= _amount */\n      dup1\n      tag_51\n      jumpi\n      pop\n        /* \"Wallet/NewWallet.sol\":729:736  _amount */\n      dup1\n        /* \"Wallet/NewWallet.sol\":704:713  allowance */\n      0x01\n        /* \"Wallet/NewWallet.sol\":704:725  allowance[msg.sender] */\n      0x00\n        /* \"Wallet/NewWallet.sol\":714:724  msg.sender */\n      caller\n        /* \"Wallet/NewWallet.sol\":704:725  allowance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Wallet/NewWallet.sol\":704:736  allowance[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"Wallet/NewWallet.sol\":691:736  isOwner() || allowance[msg.sender] >= _amount */\n    tag_51:\n        /* \"Wallet/NewWallet.sol\":683:761  require(isOwner() || allowance[msg.sender] >= _amount , \"You are not allowed\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"Wallet/NewWallet.sol\":895:898  _to */\n      dup3\n        /* \"Wallet/NewWallet.sol\":895:907  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Wallet/NewWallet.sol\":895:916  _to.transfer(_amount) */\n      0x08fc\n        /* \"Wallet/NewWallet.sol\":908:915  _amount */\n      dup4\n        /* \"Wallet/NewWallet.sol\":895:916  _to.transfer(_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n        /* \"Wallet/NewWallet.sol\":791:924  function withdrawMoney(address payable _to , uint _amount) public ownerOrAllowed(_amount){\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_46\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Wallet/NewWallet.sol\":503:625  function addAllowance(address _who , uint _amount) external onlyOwner{\r... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_66:\n        /* \"Wallet/NewWallet.sol\":608:615  _amount */\n      dup1\n        /* \"Wallet/NewWallet.sol\":590:599  allowance */\n      0x01\n        /* \"Wallet/NewWallet.sol\":590:605  allowance[_who] */\n      0x00\n        /* \"Wallet/NewWallet.sol\":600:604  _who */\n      dup5\n        /* \"Wallet/NewWallet.sol\":590:605  allowance[_who] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Wallet/NewWallet.sol\":590:615  allowance[_who] = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Wallet/NewWallet.sol\":503:625  function addAllowance(address _who , uint _amount) external onlyOwner{\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_69\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_70\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_17\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_78:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_80\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:307   */\n    tag_82:\n      0x00\n        /* \"#utility.yul\":244:250   */\n      dup2\n        /* \"#utility.yul\":231:251   */\n      calldataload\n        /* \"#utility.yul\":222:251   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:301   */\n      tag_84\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":260:301   */\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":212:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:452   */\n    tag_86:\n      0x00\n        /* \"#utility.yul\":397:403   */\n      dup2\n        /* \"#utility.yul\":384:404   */\n      calldataload\n        /* \"#utility.yul\":375:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":413:446   */\n      tag_88\n        /* \"#utility.yul\":440:445   */\n      dup2\n        /* \"#utility.yul\":413:446   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":365:452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":458:720   */\n    tag_33:\n      0x00\n        /* \"#utility.yul\":566:568   */\n      0x20\n        /* \"#utility.yul\":554:563   */\n      dup3\n        /* \"#utility.yul\":545:552   */\n      dup5\n        /* \"#utility.yul\":541:564   */\n      sub\n        /* \"#utility.yul\":537:569   */\n      slt\n        /* \"#utility.yul\":534:536   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":582:583   */\n      0x00\n        /* \"#utility.yul\":579:580   */\n      dup1\n        /* \"#utility.yul\":572:584   */\n      revert\n        /* \"#utility.yul\":534:536   */\n    tag_91:\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":650:703   */\n      tag_92\n        /* \"#utility.yul\":695:702   */\n      dup5\n        /* \"#utility.yul\":686:692   */\n      dup3\n        /* \"#utility.yul\":675:684   */\n      dup6\n        /* \"#utility.yul\":671:693   */\n      add\n        /* \"#utility.yul\":650:703   */\n      tag_78\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":640:703   */\n      swap2\n      pop\n        /* \"#utility.yul\":596:713   */\n      pop\n        /* \"#utility.yul\":524:720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":726:1149   */\n    tag_28:\n      0x00\n      dup1\n        /* \"#utility.yul\":859:861   */\n      0x40\n        /* \"#utility.yul\":847:856   */\n      dup4\n        /* \"#utility.yul\":838:845   */\n      dup6\n        /* \"#utility.yul\":834:857   */\n      sub\n        /* \"#utility.yul\":830:862   */\n      slt\n        /* \"#utility.yul\":827:829   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":875:876   */\n      0x00\n        /* \"#utility.yul\":872:873   */\n      dup1\n        /* \"#utility.yul\":865:877   */\n      revert\n        /* \"#utility.yul\":827:829   */\n    tag_94:\n        /* \"#utility.yul\":918:919   */\n      0x00\n        /* \"#utility.yul\":943:1004   */\n      tag_95\n        /* \"#utility.yul\":996:1003   */\n      dup6\n        /* \"#utility.yul\":987:993   */\n      dup3\n        /* \"#utility.yul\":976:985   */\n      dup7\n        /* \"#utility.yul\":972:994   */\n      add\n        /* \"#utility.yul\":943:1004   */\n      tag_82\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":933:1004   */\n      swap3\n      pop\n        /* \"#utility.yul\":889:1014   */\n      pop\n        /* \"#utility.yul\":1053:1055   */\n      0x20\n        /* \"#utility.yul\":1079:1132   */\n      tag_96\n        /* \"#utility.yul\":1124:1131   */\n      dup6\n        /* \"#utility.yul\":1115:1121   */\n      dup3\n        /* \"#utility.yul\":1104:1113   */\n      dup7\n        /* \"#utility.yul\":1100:1122   */\n      add\n        /* \"#utility.yul\":1079:1132   */\n      tag_86\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1069:1132   */\n      swap2\n      pop\n        /* \"#utility.yul\":1024:1142   */\n      pop\n        /* \"#utility.yul\":817:1149   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1155:1562   */\n    tag_38:\n      0x00\n      dup1\n        /* \"#utility.yul\":1280:1282   */\n      0x40\n        /* \"#utility.yul\":1268:1277   */\n      dup4\n        /* \"#utility.yul\":1259:1266   */\n      dup6\n        /* \"#utility.yul\":1255:1278   */\n      sub\n        /* \"#utility.yul\":1251:1283   */\n      slt\n        /* \"#utility.yul\":1248:1250   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1296:1297   */\n      0x00\n        /* \"#utility.yul\":1293:1294   */\n      dup1\n        /* \"#utility.yul\":1286:1298   */\n      revert\n        /* \"#utility.yul\":1248:1250   */\n    tag_98:\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1364:1417   */\n      tag_99\n        /* \"#utility.yul\":1409:1416   */\n      dup6\n        /* \"#utility.yul\":1400:1406   */\n      dup3\n        /* \"#utility.yul\":1389:1398   */\n      dup7\n        /* \"#utility.yul\":1385:1407   */\n      add\n        /* \"#utility.yul\":1364:1417   */\n      tag_78\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1354:1417   */\n      swap3\n      pop\n        /* \"#utility.yul\":1310:1427   */\n      pop\n        /* \"#utility.yul\":1466:1468   */\n      0x20\n        /* \"#utility.yul\":1492:1545   */\n      tag_100\n        /* \"#utility.yul\":1537:1544   */\n      dup6\n        /* \"#utility.yul\":1528:1534   */\n      dup3\n        /* \"#utility.yul\":1517:1526   */\n      dup7\n        /* \"#utility.yul\":1513:1535   */\n      add\n        /* \"#utility.yul\":1492:1545   */\n      tag_86\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1482:1545   */\n      swap2\n      pop\n        /* \"#utility.yul\":1437:1555   */\n      pop\n        /* \"#utility.yul\":1238:1562   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1568:1686   */\n    tag_101:\n        /* \"#utility.yul\":1655:1679   */\n      tag_103\n        /* \"#utility.yul\":1673:1678   */\n      dup2\n        /* \"#utility.yul\":1655:1679   */\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1650:1653   */\n      dup3\n        /* \"#utility.yul\":1643:1680   */\n      mstore\n        /* \"#utility.yul\":1633:1686   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1692:1801   */\n    tag_105:\n        /* \"#utility.yul\":1773:1794   */\n      tag_107\n        /* \"#utility.yul\":1788:1793   */\n      dup2\n        /* \"#utility.yul\":1773:1794   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1768:1771   */\n      dup3\n        /* \"#utility.yul\":1761:1795   */\n      mstore\n        /* \"#utility.yul\":1751:1801   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1807:2177   */\n    tag_109:\n      0x00\n        /* \"#utility.yul\":1970:2037   */\n      tag_111\n        /* \"#utility.yul\":2034:2036   */\n      0x26\n        /* \"#utility.yul\":2029:2032   */\n      dup4\n        /* \"#utility.yul\":1970:2037   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1963:2037   */\n      swap2\n      pop\n        /* \"#utility.yul\":2067:2101   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2063:2064   */\n      0x00\n        /* \"#utility.yul\":2058:2061   */\n      dup4\n        /* \"#utility.yul\":2054:2065   */\n      add\n        /* \"#utility.yul\":2047:2102   */\n      mstore\n        /* \"#utility.yul\":2133:2141   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2128:2130   */\n      0x20\n        /* \"#utility.yul\":2123:2126   */\n      dup4\n        /* \"#utility.yul\":2119:2131   */\n      add\n        /* \"#utility.yul\":2112:2142   */\n      mstore\n        /* \"#utility.yul\":2168:2170   */\n      0x40\n        /* \"#utility.yul\":2163:2166   */\n      dup3\n        /* \"#utility.yul\":2159:2171   */\n      add\n        /* \"#utility.yul\":2152:2171   */\n      swap1\n      pop\n        /* \"#utility.yul\":1953:2177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2500   */\n    tag_113:\n      0x00\n        /* \"#utility.yul\":2346:2413   */\n      tag_115\n        /* \"#utility.yul\":2410:2412   */\n      0x13\n        /* \"#utility.yul\":2405:2408   */\n      dup4\n        /* \"#utility.yul\":2346:2413   */\n      tag_112\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2339:2413   */\n      swap2\n      pop\n        /* \"#utility.yul\":2443:2464   */\n      0x596f7520617265206e6f7420616c6c6f77656400000000000000000000000000\n        /* \"#utility.yul\":2439:2440   */\n      0x00\n        /* \"#utility.yul\":2434:2437   */\n      dup4\n        /* \"#utility.yul\":2430:2441   */\n      add\n        /* \"#utility.yul\":2423:2465   */\n      mstore\n        /* \"#utility.yul\":2491:2493   */\n      0x20\n        /* \"#utility.yul\":2486:2489   */\n      dup3\n        /* \"#utility.yul\":2482:2494   */\n      add\n        /* \"#utility.yul\":2475:2494   */\n      swap1\n      pop\n        /* \"#utility.yul\":2329:2500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2506:2836   */\n    tag_116:\n      0x00\n        /* \"#utility.yul\":2669:2736   */\n      tag_118\n        /* \"#utility.yul\":2733:2735   */\n      0x20\n        /* \"#utility.yul\":2728:2731   */\n      dup4\n        /* \"#utility.yul\":2669:2736   */\n      tag_112\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2662:2736   */\n      swap2\n      pop\n        /* \"#utility.yul\":2766:2800   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2762:2763   */\n      0x00\n        /* \"#utility.yul\":2757:2760   */\n      dup4\n        /* \"#utility.yul\":2753:2764   */\n      add\n        /* \"#utility.yul\":2746:2801   */\n      mstore\n        /* \"#utility.yul\":2827:2829   */\n      0x20\n        /* \"#utility.yul\":2822:2825   */\n      dup3\n        /* \"#utility.yul\":2818:2830   */\n      add\n        /* \"#utility.yul\":2811:2830   */\n      swap1\n      pop\n        /* \"#utility.yul\":2652:2836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2842:3064   */\n    tag_19:\n      0x00\n        /* \"#utility.yul\":2973:2975   */\n      0x20\n        /* \"#utility.yul\":2962:2971   */\n      dup3\n        /* \"#utility.yul\":2958:2976   */\n      add\n        /* \"#utility.yul\":2950:2976   */\n      swap1\n      pop\n        /* \"#utility.yul\":2986:3057   */\n      tag_120\n        /* \"#utility.yul\":3054:3055   */\n      0x00\n        /* \"#utility.yul\":3043:3052   */\n      dup4\n        /* \"#utility.yul\":3039:3056   */\n      add\n        /* \"#utility.yul\":3030:3036   */\n      dup5\n        /* \"#utility.yul\":2986:3057   */\n      tag_101\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2940:3064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3070:3280   */\n    tag_24:\n      0x00\n        /* \"#utility.yul\":3195:3197   */\n      0x20\n        /* \"#utility.yul\":3184:3193   */\n      dup3\n        /* \"#utility.yul\":3180:3198   */\n      add\n        /* \"#utility.yul\":3172:3198   */\n      swap1\n      pop\n        /* \"#utility.yul\":3208:3273   */\n      tag_122\n        /* \"#utility.yul\":3270:3271   */\n      0x00\n        /* \"#utility.yul\":3259:3268   */\n      dup4\n        /* \"#utility.yul\":3255:3272   */\n      add\n        /* \"#utility.yul\":3246:3252   */\n      dup5\n        /* \"#utility.yul\":3208:3273   */\n      tag_105\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3162:3280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3286:3705   */\n    tag_63:\n      0x00\n        /* \"#utility.yul\":3490:3492   */\n      0x20\n        /* \"#utility.yul\":3479:3488   */\n      dup3\n        /* \"#utility.yul\":3475:3493   */\n      add\n        /* \"#utility.yul\":3467:3493   */\n      swap1\n      pop\n        /* \"#utility.yul\":3539:3548   */\n      dup2\n        /* \"#utility.yul\":3533:3537   */\n      dup2\n        /* \"#utility.yul\":3529:3549   */\n      sub\n        /* \"#utility.yul\":3525:3526   */\n      0x00\n        /* \"#utility.yul\":3514:3523   */\n      dup4\n        /* \"#utility.yul\":3510:3527   */\n      add\n        /* \"#utility.yul\":3503:3550   */\n      mstore\n        /* \"#utility.yul\":3567:3698   */\n      tag_124\n        /* \"#utility.yul\":3693:3697   */\n      dup2\n        /* \"#utility.yul\":3567:3698   */\n      tag_109\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3559:3698   */\n      swap1\n      pop\n        /* \"#utility.yul\":3457:3705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3711:4130   */\n    tag_54:\n      0x00\n        /* \"#utility.yul\":3915:3917   */\n      0x20\n        /* \"#utility.yul\":3904:3913   */\n      dup3\n        /* \"#utility.yul\":3900:3918   */\n      add\n        /* \"#utility.yul\":3892:3918   */\n      swap1\n      pop\n        /* \"#utility.yul\":3964:3973   */\n      dup2\n        /* \"#utility.yul\":3958:3962   */\n      dup2\n        /* \"#utility.yul\":3954:3974   */\n      sub\n        /* \"#utility.yul\":3950:3951   */\n      0x00\n        /* \"#utility.yul\":3939:3948   */\n      dup4\n        /* \"#utility.yul\":3935:3952   */\n      add\n        /* \"#utility.yul\":3928:3975   */\n      mstore\n        /* \"#utility.yul\":3992:4123   */\n      tag_126\n        /* \"#utility.yul\":4118:4122   */\n      dup2\n        /* \"#utility.yul\":3992:4123   */\n      tag_113\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3984:4123   */\n      swap1\n      pop\n        /* \"#utility.yul\":3882:4130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4136:4555   */\n    tag_74:\n      0x00\n        /* \"#utility.yul\":4340:4342   */\n      0x20\n        /* \"#utility.yul\":4329:4338   */\n      dup3\n        /* \"#utility.yul\":4325:4343   */\n      add\n        /* \"#utility.yul\":4317:4343   */\n      swap1\n      pop\n        /* \"#utility.yul\":4389:4398   */\n      dup2\n        /* \"#utility.yul\":4383:4387   */\n      dup2\n        /* \"#utility.yul\":4379:4399   */\n      sub\n        /* \"#utility.yul\":4375:4376   */\n      0x00\n        /* \"#utility.yul\":4364:4373   */\n      dup4\n        /* \"#utility.yul\":4360:4377   */\n      add\n        /* \"#utility.yul\":4353:4400   */\n      mstore\n        /* \"#utility.yul\":4417:4548   */\n      tag_128\n        /* \"#utility.yul\":4543:4547   */\n      dup2\n        /* \"#utility.yul\":4417:4548   */\n      tag_116\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":4409:4548   */\n      swap1\n      pop\n        /* \"#utility.yul\":4307:4555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4561:4730   */\n    tag_112:\n      0x00\n        /* \"#utility.yul\":4679:4685   */\n      dup3\n        /* \"#utility.yul\":4674:4677   */\n      dup3\n        /* \"#utility.yul\":4667:4686   */\n      mstore\n        /* \"#utility.yul\":4719:4723   */\n      0x20\n        /* \"#utility.yul\":4714:4717   */\n      dup3\n        /* \"#utility.yul\":4710:4724   */\n      add\n        /* \"#utility.yul\":4695:4724   */\n      swap1\n      pop\n        /* \"#utility.yul\":4657:4730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4736:4832   */\n    tag_104:\n      0x00\n        /* \"#utility.yul\":4802:4826   */\n      tag_131\n        /* \"#utility.yul\":4820:4825   */\n      dup3\n        /* \"#utility.yul\":4802:4826   */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4791:4826   */\n      swap1\n      pop\n        /* \"#utility.yul\":4781:4832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4838:4942   */\n    tag_133:\n      0x00\n        /* \"#utility.yul\":4912:4936   */\n      tag_135\n        /* \"#utility.yul\":4930:4935   */\n      dup3\n        /* \"#utility.yul\":4912:4936   */\n      tag_132\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":4901:4936   */\n      swap1\n      pop\n        /* \"#utility.yul\":4891:4942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4948:5038   */\n    tag_108:\n      0x00\n        /* \"#utility.yul\":5025:5030   */\n      dup2\n        /* \"#utility.yul\":5018:5031   */\n      iszero\n        /* \"#utility.yul\":5011:5032   */\n      iszero\n        /* \"#utility.yul\":5000:5032   */\n      swap1\n      pop\n        /* \"#utility.yul\":4990:5038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5044:5170   */\n    tag_132:\n      0x00\n        /* \"#utility.yul\":5121:5163   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5114:5119   */\n      dup3\n        /* \"#utility.yul\":5110:5164   */\n      and\n        /* \"#utility.yul\":5099:5164   */\n      swap1\n      pop\n        /* \"#utility.yul\":5089:5170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5176:5253   */\n    tag_138:\n      0x00\n        /* \"#utility.yul\":5242:5247   */\n      dup2\n        /* \"#utility.yul\":5231:5247   */\n      swap1\n      pop\n        /* \"#utility.yul\":5221:5253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5259:5381   */\n    tag_81:\n        /* \"#utility.yul\":5332:5356   */\n      tag_141\n        /* \"#utility.yul\":5350:5355   */\n      dup2\n        /* \"#utility.yul\":5332:5356   */\n      tag_104\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":5325:5330   */\n      dup2\n        /* \"#utility.yul\":5322:5357   */\n      eq\n        /* \"#utility.yul\":5312:5314   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":5371:5372   */\n      0x00\n        /* \"#utility.yul\":5368:5369   */\n      dup1\n        /* \"#utility.yul\":5361:5373   */\n      revert\n        /* \"#utility.yul\":5312:5314   */\n    tag_142:\n        /* \"#utility.yul\":5302:5381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5387:5525   */\n    tag_85:\n        /* \"#utility.yul\":5468:5500   */\n      tag_144\n        /* \"#utility.yul\":5494:5499   */\n      dup2\n        /* \"#utility.yul\":5468:5500   */\n      tag_133\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5461:5466   */\n      dup2\n        /* \"#utility.yul\":5458:5501   */\n      eq\n        /* \"#utility.yul\":5448:5450   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":5515:5516   */\n      0x00\n        /* \"#utility.yul\":5512:5513   */\n      dup1\n        /* \"#utility.yul\":5505:5517   */\n      revert\n        /* \"#utility.yul\":5448:5450   */\n    tag_145:\n        /* \"#utility.yul\":5438:5525   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5531:5653   */\n    tag_89:\n        /* \"#utility.yul\":5604:5628   */\n      tag_147\n        /* \"#utility.yul\":5622:5627   */\n      dup2\n        /* \"#utility.yul\":5604:5628   */\n      tag_138\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5597:5602   */\n      dup2\n        /* \"#utility.yul\":5594:5629   */\n      eq\n        /* \"#utility.yul\":5584:5586   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":5643:5644   */\n      0x00\n        /* \"#utility.yul\":5640:5641   */\n      dup1\n        /* \"#utility.yul\":5633:5645   */\n      revert\n        /* \"#utility.yul\":5584:5586   */\n    tag_148:\n        /* \"#utility.yul\":5574:5653   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220be0a7c2924a01be00cd3c487d282a79775531881b9f8e90abb1641a409a4829b64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261007360201b60201c565b61007b60201b60201c565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061013f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61085a8061014e6000396000f3fe6080604052600436106100705760003560e01c80638f32d59b1161004e5780638f32d59b146100c1578063f274c897146100ec578063f2fde38b14610115578063f3c40c4b1461013e57610070565b80636d26ec1814610075578063715018a61461007f5780638da5cb5b14610096575b600080fd5b61007d610167565b005b34801561008b57600080fd5b50610094610169565b005b3480156100a257600080fd5b506100ab61017d565b6040516100b891906106de565b60405180910390f35b3480156100cd57600080fd5b506100d66101a6565b6040516100e391906106f9565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e9190610562565b6101fe565b005b34801561012157600080fd5b5061013c60048036038101906101379190610539565b6102dc565b005b34801561014a57600080fd5b506101656004803603810190610160919061059e565b610360565b005b565b6101716103b0565b61017b600061042e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60003373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905090565b806102076101a6565b80610251575080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b610290576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028790610734565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156102d6573d6000803e3d6000fd5b50505050565b6102e46103b0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034b90610714565b60405180910390fd5b61035d8161042e565b50565b6103686103b0565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6103b86104f2565b73ffffffffffffffffffffffffffffffffffffffff166103d661017d565b73ffffffffffffffffffffffffffffffffffffffff161461042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390610754565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081359050610509816107df565b92915050565b60008135905061051e816107f6565b92915050565b6000813590506105338161080d565b92915050565b60006020828403121561054b57600080fd5b6000610559848285016104fa565b91505092915050565b6000806040838503121561057557600080fd5b60006105838582860161050f565b925050602061059485828601610524565b9150509250929050565b600080604083850312156105b157600080fd5b60006105bf858286016104fa565b92505060206105d085828601610524565b9150509250929050565b6105e381610785565b82525050565b6105f2816107a9565b82525050565b6000610605602683610774565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061066b601383610774565b91507f596f7520617265206e6f7420616c6c6f776564000000000000000000000000006000830152602082019050919050565b60006106ab602083610774565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506106f360008301846105da565b92915050565b600060208201905061070e60008301846105e9565b92915050565b6000602082019050818103600083015261072d816105f8565b9050919050565b6000602082019050818103600083015261074d8161065e565b9050919050565b6000602082019050818103600083015261076d8161069e565b9050919050565b600082825260208201905092915050565b6000610790826107b5565b9050919050565b60006107a2826107b5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6107e881610785565b81146107f357600080fd5b50565b6107ff81610797565b811461080a57600080fd5b50565b610816816107d5565b811461082157600080fd5b5056fea2646970667358221220be0a7c2924a01be00cd3c487d282a79775531881b9f8e90abb1641a409a4829b64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x73 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x7B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x85A DUP1 PUSH2 0x14E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xF3C40C4B EQ PUSH2 0x13E JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x96 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH2 0x167 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x94 PUSH2 0x169 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST PUSH2 0x171 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x17B PUSH1 0x0 PUSH2 0x42E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x207 PUSH2 0x1A6 JUMP JUMPDEST DUP1 PUSH2 0x251 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST PUSH2 0x290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x287 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35D DUP2 PUSH2 0x42E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x368 PUSH2 0x3B0 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x3B8 PUSH2 0x4F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D6 PUSH2 0x17D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x423 SWAP1 PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x509 DUP2 PUSH2 0x7DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x51E DUP2 PUSH2 0x7F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x533 DUP2 PUSH2 0x80D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP5 DUP3 DUP6 ADD PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x583 DUP6 DUP3 DUP7 ADD PUSH2 0x50F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x594 DUP6 DUP3 DUP7 ADD PUSH2 0x524 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5BF DUP6 DUP3 DUP7 ADD PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5D0 DUP6 DUP3 DUP7 ADD PUSH2 0x524 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E3 DUP2 PUSH2 0x785 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5F2 DUP2 PUSH2 0x7A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x605 PUSH1 0x26 DUP4 PUSH2 0x774 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66B PUSH1 0x13 DUP4 PUSH2 0x774 JUMP JUMPDEST SWAP2 POP PUSH32 0x596F7520617265206E6F7420616C6C6F77656400000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AB PUSH1 0x20 DUP4 PUSH2 0x774 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x70E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x72D DUP2 PUSH2 0x5F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x74D DUP2 PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x76D DUP2 PUSH2 0x69E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x790 DUP3 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A2 DUP3 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E8 DUP2 PUSH2 0x785 JUMP JUMPDEST DUP2 EQ PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7FF DUP2 PUSH2 0x797 JUMP JUMPDEST DUP2 EQ PUSH2 0x80A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x816 DUP2 PUSH2 0x7D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE EXP PUSH29 0x2924A01BE00CD3C487D282A79775531881B9F8E90ABB1641A409A4829B PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "174:759:0:-:0;;;274:52;;;;;;;;;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;308:10:0;299:6;;:19;;;;;;;;;;;;;;;;;;174:759;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;174:759:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5656:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:95:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "231:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "260:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:41:3"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:155:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "365:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "375:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "397:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "384:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "375:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "440:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "413:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "413:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "413:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "343:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "351:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "359:5:3",
														"type": ""
													}
												],
												"src": "313:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "524:196:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "579:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "582:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "572:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "545:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "554:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "537:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:32:3"
															},
															"nodeType": "YulIf",
															"src": "534:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "596:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "611:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "615:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "640:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "675:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "686:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "671:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "671:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "695:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "650:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "650:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "640:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "494:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "505:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "517:6:3",
														"type": ""
													}
												],
												"src": "458:262:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "817:332:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "863:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "872:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "875:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "865:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "865:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "865:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "838:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "847:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "859:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "830:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "830:32:3"
															},
															"nodeType": "YulIf",
															"src": "827:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "889:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "904:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "908:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "933:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "976:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "987:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "972:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "972:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "996:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "943:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "943:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "933:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1024:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1039:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1053:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1043:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1069:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1104:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1115:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1100:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1100:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1124:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1079:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1079:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1069:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "779:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "790:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "802:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "810:6:3",
														"type": ""
													}
												],
												"src": "726:423:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1238:324:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1284:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1293:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1296:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1286:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1286:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1286:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1259:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1268:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1255:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1255:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1251:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:32:3"
															},
															"nodeType": "YulIf",
															"src": "1248:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1310:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1325:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1339:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1329:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1354:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1389:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1400:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1385:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1385:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1409:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1364:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1364:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1354:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1437:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1452:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1466:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1456:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1482:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1517:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1528:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1513:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1513:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1537:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1492:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1200:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1211:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1223:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1231:6:3",
														"type": ""
													}
												],
												"src": "1155:407:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1633:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1650:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1673:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1655:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1655:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1643:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1643:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1621:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1628:3:3",
														"type": ""
													}
												],
												"src": "1568:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1751:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1768:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1788:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1773:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1773:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1761:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1739:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1746:3:3",
														"type": ""
													}
												],
												"src": "1692:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:224:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1963:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2029:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2034:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1970:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1970:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2058:3:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2063:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2054:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2054:11:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2067:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2047:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2047:55:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2047:55:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2123:3:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2128:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2119:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2119:12:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2133:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:30:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2152:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2163:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2168:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2159:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2159:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2152:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1941:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1949:3:3",
														"type": ""
													}
												],
												"src": "1807:370:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2329:171:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2339:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2405:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:3",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2346:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2339:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2434:3:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2439:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2430:11:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2443:21:3",
																		"type": "",
																		"value": "You are not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2423:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2423:42:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2423:42:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2475:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2486:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2491:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2482:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2482:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2475:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2317:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2325:3:3",
														"type": ""
													}
												],
												"src": "2183:317:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2652:184:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2662:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2728:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2733:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2669:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2669:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2662:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2757:3:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2762:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2753:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2753:11:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2766:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2746:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2746:55:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2746:55:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2811:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2822:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2827:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2818:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2818:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2640:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2648:3:3",
														"type": ""
													}
												],
												"src": "2506:330:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2940:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2950:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2962:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2973:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2958:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2958:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2950:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3030:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3043:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3054:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3039:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3039:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2986:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2986:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2986:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2912:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2924:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2935:4:3",
														"type": ""
													}
												],
												"src": "2842:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3162:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3172:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3184:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3195:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3180:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3180:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3172:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3246:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3270:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3255:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3255:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3208:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3208:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3134:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3146:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3157:4:3",
														"type": ""
													}
												],
												"src": "3070:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3457:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3467:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3479:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3490:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3475:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3467:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3514:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3525:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3533:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3539:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3503:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3503:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3559:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3693:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3567:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3567:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3559:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3437:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3452:4:3",
														"type": ""
													}
												],
												"src": "3286:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3882:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3892:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3904:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3915:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3892:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3939:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3950:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3935:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3935:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3958:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3964:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3954:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3954:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3928:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3928:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3928:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3984:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4118:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3992:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3992:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3984:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3862:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3877:4:3",
														"type": ""
													}
												],
												"src": "3711:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4307:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4317:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4329:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4340:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4325:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4325:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4317:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4364:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4375:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4360:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4360:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4383:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4389:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4379:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4379:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4353:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4353:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4409:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4543:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4417:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4409:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4287:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4302:4:3",
														"type": ""
													}
												],
												"src": "4136:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4657:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4674:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4679:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4667:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4667:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4695:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4714:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4719:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4710:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4710:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4695:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4629:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4634:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4645:11:3",
														"type": ""
													}
												],
												"src": "4561:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4781:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4791:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4820:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4802:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4802:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4791:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4763:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4773:7:3",
														"type": ""
													}
												],
												"src": "4736:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4891:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4901:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4930:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4912:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4912:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4901:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4873:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4883:7:3",
														"type": ""
													}
												],
												"src": "4838:104:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4990:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5000:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5025:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5018:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5018:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5011:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5000:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4972:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4982:7:3",
														"type": ""
													}
												],
												"src": "4948:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5089:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5099:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5114:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5121:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5110:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5110:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5099:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5071:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5081:7:3",
														"type": ""
													}
												],
												"src": "5044:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5221:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5231:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5242:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5231:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5203:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5213:7:3",
														"type": ""
													}
												],
												"src": "5176:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5302:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5359:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5368:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5371:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5361:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5361:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5361:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5325:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5350:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5332:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5332:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5322:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5322:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5315:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5315:43:3"
															},
															"nodeType": "YulIf",
															"src": "5312:2:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5295:5:3",
														"type": ""
													}
												],
												"src": "5259:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5438:87:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5503:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5512:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5515:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5505:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5505:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5505:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5461:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5494:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "5468:25:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5458:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5458:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5451:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:51:3"
															},
															"nodeType": "YulIf",
															"src": "5448:2:3"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5431:5:3",
														"type": ""
													}
												],
												"src": "5387:138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5574:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5631:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5640:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5643:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5633:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5633:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5633:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5597:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5622:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5604:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5604:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5594:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5594:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5587:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5587:43:3"
															},
															"nodeType": "YulIf",
															"src": "5584:2:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5567:5:3",
														"type": ""
													}
												],
												"src": "5531:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n\n        mstore(add(pos, 0), \"You are not allowed\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c80638f32d59b1161004e5780638f32d59b146100c1578063f274c897146100ec578063f2fde38b14610115578063f3c40c4b1461013e57610070565b80636d26ec1814610075578063715018a61461007f5780638da5cb5b14610096575b600080fd5b61007d610167565b005b34801561008b57600080fd5b50610094610169565b005b3480156100a257600080fd5b506100ab61017d565b6040516100b891906106de565b60405180910390f35b3480156100cd57600080fd5b506100d66101a6565b6040516100e391906106f9565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e9190610562565b6101fe565b005b34801561012157600080fd5b5061013c60048036038101906101379190610539565b6102dc565b005b34801561014a57600080fd5b506101656004803603810190610160919061059e565b610360565b005b565b6101716103b0565b61017b600061042e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60003373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905090565b806102076101a6565b80610251575080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b610290576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028790610734565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156102d6573d6000803e3d6000fd5b50505050565b6102e46103b0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034b90610714565b60405180910390fd5b61035d8161042e565b50565b6103686103b0565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6103b86104f2565b73ffffffffffffffffffffffffffffffffffffffff166103d661017d565b73ffffffffffffffffffffffffffffffffffffffff161461042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390610754565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081359050610509816107df565b92915050565b60008135905061051e816107f6565b92915050565b6000813590506105338161080d565b92915050565b60006020828403121561054b57600080fd5b6000610559848285016104fa565b91505092915050565b6000806040838503121561057557600080fd5b60006105838582860161050f565b925050602061059485828601610524565b9150509250929050565b600080604083850312156105b157600080fd5b60006105bf858286016104fa565b92505060206105d085828601610524565b9150509250929050565b6105e381610785565b82525050565b6105f2816107a9565b82525050565b6000610605602683610774565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061066b601383610774565b91507f596f7520617265206e6f7420616c6c6f776564000000000000000000000000006000830152602082019050919050565b60006106ab602083610774565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506106f360008301846105da565b92915050565b600060208201905061070e60008301846105e9565b92915050565b6000602082019050818103600083015261072d816105f8565b9050919050565b6000602082019050818103600083015261074d8161065e565b9050919050565b6000602082019050818103600083015261076d8161069e565b9050919050565b600082825260208201905092915050565b6000610790826107b5565b9050919050565b60006107a2826107b5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6107e881610785565b81146107f357600080fd5b50565b6107ff81610797565b811461080a57600080fd5b50565b610816816107d5565b811461082157600080fd5b5056fea2646970667358221220be0a7c2924a01be00cd3c487d282a79775531881b9f8e90abb1641a409a4829b64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xF3C40C4B EQ PUSH2 0x13E JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x96 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH2 0x167 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x94 PUSH2 0x169 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST PUSH2 0x171 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x17B PUSH1 0x0 PUSH2 0x42E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x207 PUSH2 0x1A6 JUMP JUMPDEST DUP1 PUSH2 0x251 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST PUSH2 0x290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x287 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2E4 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35D DUP2 PUSH2 0x42E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x368 PUSH2 0x3B0 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x3B8 PUSH2 0x4F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D6 PUSH2 0x17D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x423 SWAP1 PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x509 DUP2 PUSH2 0x7DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x51E DUP2 PUSH2 0x7F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x533 DUP2 PUSH2 0x80D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP5 DUP3 DUP6 ADD PUSH2 0x4FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x583 DUP6 DUP3 DUP7 ADD PUSH2 0x50F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x594 DUP6 DUP3 DUP7 ADD PUSH2 0x524 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5BF DUP6 DUP3 DUP7 ADD PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5D0 DUP6 DUP3 DUP7 ADD PUSH2 0x524 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E3 DUP2 PUSH2 0x785 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5F2 DUP2 PUSH2 0x7A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x605 PUSH1 0x26 DUP4 PUSH2 0x774 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66B PUSH1 0x13 DUP4 PUSH2 0x774 JUMP JUMPDEST SWAP2 POP PUSH32 0x596F7520617265206E6F7420616C6C6F77656400000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AB PUSH1 0x20 DUP4 PUSH2 0x774 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x70E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x72D DUP2 PUSH2 0x5F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x74D DUP2 PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x76D DUP2 PUSH2 0x69E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x790 DUP3 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A2 DUP3 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E8 DUP2 PUSH2 0x785 JUMP JUMPDEST DUP2 EQ PUSH2 0x7F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7FF DUP2 PUSH2 0x797 JUMP JUMPDEST DUP2 EQ PUSH2 0x80A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x816 DUP2 PUSH2 0x7D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE EXP PUSH29 0x2924A01BE00CD3C487D282A79775531881B9F8E90ABB1641A409A4829B PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "174:759:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;441:49;;;:::i;:::-;;1831:101:1;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;339:93:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;791:133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;503:122:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;441:49;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;339:93:0:-;378:4;413:10;403:20;;:6;;;;;;;;;;;:20;;;396:27;;339:93;:::o;791:133::-;872:7;691:9;:7;:9::i;:::-;:45;;;;729:7;704:9;:21;714:10;704:21;;;;;;;;;;;;;;;;:32;;691:45;683:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;895:3:::1;:12;;:21;908:7;895:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;791:133:::0;;;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;503:122:0:-;1094:13:1;:11;:13::i;:::-;608:7:0::1;590:9;:15;600:4;590:15;;;;;;;;;;;;;;;:25;;;;503:122:::0;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7:139:3:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:139::-;;397:6;384:20;375:29;;413:33;440:5;413:33;:::i;:::-;365:87;;;;:::o;458:262::-;;566:2;554:9;545:7;541:23;537:32;534:2;;;582:1;579;572:12;534:2;625:1;650:53;695:7;686:6;675:9;671:22;650:53;:::i;:::-;640:63;;596:117;524:196;;;;:::o;726:423::-;;;859:2;847:9;838:7;834:23;830:32;827:2;;;875:1;872;865:12;827:2;918:1;943:61;996:7;987:6;976:9;972:22;943:61;:::i;:::-;933:71;;889:125;1053:2;1079:53;1124:7;1115:6;1104:9;1100:22;1079:53;:::i;:::-;1069:63;;1024:118;817:332;;;;;:::o;1155:407::-;;;1280:2;1268:9;1259:7;1255:23;1251:32;1248:2;;;1296:1;1293;1286:12;1248:2;1339:1;1364:53;1409:7;1400:6;1389:9;1385:22;1364:53;:::i;:::-;1354:63;;1310:117;1466:2;1492:53;1537:7;1528:6;1517:9;1513:22;1492:53;:::i;:::-;1482:63;;1437:118;1238:324;;;;;:::o;1568:118::-;1655:24;1673:5;1655:24;:::i;:::-;1650:3;1643:37;1633:53;;:::o;1692:109::-;1773:21;1788:5;1773:21;:::i;:::-;1768:3;1761:34;1751:50;;:::o;1807:370::-;;1970:67;2034:2;2029:3;1970:67;:::i;:::-;1963:74;;2067:34;2063:1;2058:3;2054:11;2047:55;2133:8;2128:2;2123:3;2119:12;2112:30;2168:2;2163:3;2159:12;2152:19;;1953:224;;;:::o;2183:317::-;;2346:67;2410:2;2405:3;2346:67;:::i;:::-;2339:74;;2443:21;2439:1;2434:3;2430:11;2423:42;2491:2;2486:3;2482:12;2475:19;;2329:171;;;:::o;2506:330::-;;2669:67;2733:2;2728:3;2669:67;:::i;:::-;2662:74;;2766:34;2762:1;2757:3;2753:11;2746:55;2827:2;2822:3;2818:12;2811:19;;2652:184;;;:::o;2842:222::-;;2973:2;2962:9;2958:18;2950:26;;2986:71;3054:1;3043:9;3039:17;3030:6;2986:71;:::i;:::-;2940:124;;;;:::o;3070:210::-;;3195:2;3184:9;3180:18;3172:26;;3208:65;3270:1;3259:9;3255:17;3246:6;3208:65;:::i;:::-;3162:118;;;;:::o;3286:419::-;;3490:2;3479:9;3475:18;3467:26;;3539:9;3533:4;3529:20;3525:1;3514:9;3510:17;3503:47;3567:131;3693:4;3567:131;:::i;:::-;3559:139;;3457:248;;;:::o;3711:419::-;;3915:2;3904:9;3900:18;3892:26;;3964:9;3958:4;3954:20;3950:1;3939:9;3935:17;3928:47;3992:131;4118:4;3992:131;:::i;:::-;3984:139;;3882:248;;;:::o;4136:419::-;;4340:2;4329:9;4325:18;4317:26;;4389:9;4383:4;4379:20;4375:1;4364:9;4360:17;4353:47;4417:131;4543:4;4417:131;:::i;:::-;4409:139;;4307:248;;;:::o;4561:169::-;;4679:6;4674:3;4667:19;4719:4;4714:3;4710:14;4695:29;;4657:73;;;;:::o;4736:96::-;;4802:24;4820:5;4802:24;:::i;:::-;4791:35;;4781:51;;;:::o;4838:104::-;;4912:24;4930:5;4912:24;:::i;:::-;4901:35;;4891:51;;;:::o;4948:90::-;;5025:5;5018:13;5011:21;5000:32;;4990:48;;;:::o;5044:126::-;;5121:42;5114:5;5110:54;5099:65;;5089:81;;;:::o;5176:77::-;;5242:5;5231:16;;5221:32;;;:::o;5259:122::-;5332:24;5350:5;5332:24;:::i;:::-;5325:5;5322:35;5312:2;;5371:1;5368;5361:12;5312:2;5302:79;:::o;5387:138::-;5468:32;5494:5;5468:32;:::i;:::-;5461:5;5458:43;5448:2;;5515:1;5512;5505:12;5448:2;5438:87;:::o;5531:122::-;5604:24;5622:5;5604:24;:::i;:::-;5597:5;5594:35;5584:2;;5643:1;5640;5633:12;5584:2;5574:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "427600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addAllowance(address,uint256)": "21762",
								"isOwner()": "1196",
								"owner()": "1267",
								"receiveMoney()": "121",
								"renounceOwnership()": "24421",
								"transferOwnership(address)": "24791",
								"withdrawMoney(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 933,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 933,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 933,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 274,
									"end": 326,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 274,
									"end": 326,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 274,
									"end": 326,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 274,
									"end": 326,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 274,
									"end": 326,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 274,
									"end": 326,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 274,
									"end": 326,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 274,
									"end": 326,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 274,
									"end": 326,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 274,
									"end": 326,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 274,
									"end": 326,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 308,
									"end": 318,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 299,
									"end": 305,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 299,
									"end": 305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 299,
									"end": 318,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 299,
									"end": 318,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 299,
									"end": 318,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 299,
									"end": 318,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 174,
									"end": 933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 174,
									"end": 933,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 174,
									"end": 933,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 174,
									"end": 933,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 174,
									"end": 933,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 933,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 174,
									"end": 933,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 933,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 933,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 174,
									"end": 933,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 933,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be0a7c2924a01be00cd3c487d282a79775531881b9f8e90abb1641a409a4829b64736f6c63430008000033",
									".code": [
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "8F32D59B"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "8F32D59B"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "F274C897"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "F3C40C4B"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "6D26EC18"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 441,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 441,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 441,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 441,
											"end": 490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 441,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 441,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 490,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 339,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 503,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 441,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 441,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 339,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 378,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 423,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 403,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 409,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 409,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 403,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 403,
											"end": 423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 396,
											"end": 423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 432,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 791,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 872,
											"end": 879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 691,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 691,
											"end": 700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 691,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 691,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 691,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 691,
											"end": 736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 691,
											"end": 736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 724,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 736,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 704,
											"end": 736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 691,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 691,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 683,
											"end": 761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 683,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 683,
											"end": 761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 683,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 683,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 683,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 895,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 908,
											"end": 915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 924,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 503,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 608,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 590,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 604,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 590,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 590,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 590,
											"end": 605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 590,
											"end": 605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 590,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 590,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 590,
											"end": 605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 590,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 590,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 605,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 590,
											"end": 615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 503,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 251,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 212,
											"end": 307,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 212,
											"end": 307,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 212,
											"end": 307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 212,
											"end": 307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 212,
											"end": 307,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 452,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 313,
											"end": 452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 313,
											"end": 452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 384,
											"end": 404,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 375,
											"end": 404,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 375,
											"end": 404,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 413,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 440,
											"end": 445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 413,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 413,
											"end": 446,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 446,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 413,
											"end": 446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 452,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 452,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 458,
											"end": 720,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 458,
											"end": 720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 568,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 563,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 552,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 541,
											"end": 564,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 537,
											"end": 569,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 534,
											"end": 536,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 534,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 582,
											"end": 583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 580,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 572,
											"end": 584,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 534,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 695,
											"end": 702,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 686,
											"end": 692,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 675,
											"end": 684,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 671,
											"end": 693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 650,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 650,
											"end": 703,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 703,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 650,
											"end": 703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 640,
											"end": 703,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 640,
											"end": 703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 596,
											"end": 713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 720,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 524,
											"end": 720,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 524,
											"end": 720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 720,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1149,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 726,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 726,
											"end": 1149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 1149,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 859,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 847,
											"end": 856,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 838,
											"end": 845,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 834,
											"end": 857,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 830,
											"end": 862,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 827,
											"end": 829,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 827,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 827,
											"end": 829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 875,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 873,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 865,
											"end": 877,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 827,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 827,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 918,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 996,
											"end": 1003,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 987,
											"end": 993,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 976,
											"end": 985,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 972,
											"end": 994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 943,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 943,
											"end": 1004,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 943,
											"end": 1004,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 943,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1004,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 889,
											"end": 1014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1124,
											"end": 1131,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1115,
											"end": 1121,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1122,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1079,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1079,
											"end": 1132,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1132,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1079,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1142,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1149,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1149,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1149,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 1149,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1155,
											"end": 1562,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1155,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1155,
											"end": 1562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1277,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1278,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1283,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1294,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1286,
											"end": 1298,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1409,
											"end": 1416,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1406,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1407,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1364,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1310,
											"end": 1427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1468,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1537,
											"end": 1544,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1526,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1535,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1562,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1562,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1562,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1568,
											"end": 1686,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1568,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1673,
											"end": 1678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1655,
											"end": 1679,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1655,
											"end": 1679,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1655,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1650,
											"end": 1653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1643,
											"end": 1680,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 1801,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1692,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1788,
											"end": 1793,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1771,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1801,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1801,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1801,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1807,
											"end": 2177,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1807,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1807,
											"end": 2177,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2029,
											"end": 2032,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1970,
											"end": 2037,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 2037,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1970,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2037,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2067,
											"end": 2101,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2061,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2047,
											"end": 2102,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2141,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2123,
											"end": 2126,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2112,
											"end": 2142,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2170,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2166,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2171,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2177,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2177,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2183,
											"end": 2500,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2183,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2346,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2346,
											"end": 2413,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2346,
											"end": 2413,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2346,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2413,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2413,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2464,
											"name": "PUSH",
											"source": 3,
											"value": "596F7520617265206E6F7420616C6C6F77656400000000000000000000000000"
										},
										{
											"begin": 2439,
											"end": 2440,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2437,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2441,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2423,
											"end": 2465,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2489,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2500,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2506,
											"end": 2836,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2506,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2733,
											"end": 2735,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2728,
											"end": 2731,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2669,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2669,
											"end": 2736,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2669,
											"end": 2736,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2669,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2662,
											"end": 2736,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2662,
											"end": 2736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2800,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2760,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2753,
											"end": 2764,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2822,
											"end": 2825,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2836,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2842,
											"end": 3064,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2842,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 3064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2975,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2962,
											"end": 2971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2958,
											"end": 2976,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2950,
											"end": 2976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2950,
											"end": 2976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2986,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3052,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3039,
											"end": 3056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2986,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2986,
											"end": 3057,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2986,
											"end": 3057,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2986,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3064,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3064,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3064,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3064,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3064,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3070,
											"end": 3280,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3070,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3280,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3184,
											"end": 3193,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3172,
											"end": 3198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3172,
											"end": 3198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3255,
											"end": 3272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3208,
											"end": 3273,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3208,
											"end": 3273,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3208,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3162,
											"end": 3280,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3162,
											"end": 3280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3162,
											"end": 3280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3162,
											"end": 3280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3162,
											"end": 3280,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3286,
											"end": 3705,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3286,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3492,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3488,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3539,
											"end": 3548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3537,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3523,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3550,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3567,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3693,
											"end": 3697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3567,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3567,
											"end": 3698,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3567,
											"end": 3698,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3567,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3698,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3457,
											"end": 3705,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3457,
											"end": 3705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3457,
											"end": 3705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3457,
											"end": 3705,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3711,
											"end": 4130,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3711,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3904,
											"end": 3913,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3900,
											"end": 3918,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3892,
											"end": 3918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 3973,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3958,
											"end": 3962,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3954,
											"end": 3974,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 3975,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4118,
											"end": 4122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3992,
											"end": 4123,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3992,
											"end": 4123,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3992,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3984,
											"end": 4123,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3984,
											"end": 4123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 4130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 4130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 4130,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4136,
											"end": 4555,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4136,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4555,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4340,
											"end": 4342,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4329,
											"end": 4338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4325,
											"end": 4343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4317,
											"end": 4343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4317,
											"end": 4343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4383,
											"end": 4387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4379,
											"end": 4399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4373,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4360,
											"end": 4377,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4353,
											"end": 4400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4543,
											"end": 4547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4417,
											"end": 4548,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4417,
											"end": 4548,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4417,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4555,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4555,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4561,
											"end": 4730,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4561,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4561,
											"end": 4730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4679,
											"end": 4685,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4674,
											"end": 4677,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4667,
											"end": 4686,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4719,
											"end": 4723,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4714,
											"end": 4717,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4710,
											"end": 4724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 4724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 4724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4657,
											"end": 4730,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4657,
											"end": 4730,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4657,
											"end": 4730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4657,
											"end": 4730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4657,
											"end": 4730,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4736,
											"end": 4832,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4736,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4736,
											"end": 4832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4802,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4802,
											"end": 4826,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4802,
											"end": 4826,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4802,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4791,
											"end": 4826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4791,
											"end": 4826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4781,
											"end": 4832,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4781,
											"end": 4832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4781,
											"end": 4832,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4781,
											"end": 4832,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4838,
											"end": 4942,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4838,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4838,
											"end": 4942,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4930,
											"end": 4935,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4912,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4912,
											"end": 4936,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4912,
											"end": 4936,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4912,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4901,
											"end": 4936,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4901,
											"end": 4936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4942,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4942,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4942,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5038,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4948,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5038,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5031,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5032,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5038,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5044,
											"end": 5170,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5044,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5163,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5114,
											"end": 5119,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5164,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5099,
											"end": 5164,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5099,
											"end": 5164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5089,
											"end": 5170,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5176,
											"end": 5253,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5176,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5176,
											"end": 5253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5231,
											"end": 5247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5231,
											"end": 5247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5221,
											"end": 5253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5221,
											"end": 5253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5221,
											"end": 5253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5221,
											"end": 5253,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5259,
											"end": 5381,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5259,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5350,
											"end": 5355,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5332,
											"end": 5356,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5332,
											"end": 5356,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5332,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5325,
											"end": 5330,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5322,
											"end": 5357,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5371,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5361,
											"end": 5373,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5387,
											"end": 5525,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 5387,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5468,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5494,
											"end": 5499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5468,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5468,
											"end": 5500,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5468,
											"end": 5500,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5468,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5461,
											"end": 5466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5458,
											"end": 5501,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5515,
											"end": 5516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5513,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5517,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5525,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5531,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5531,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5622,
											"end": 5627,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5604,
											"end": 5628,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5604,
											"end": 5628,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5604,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5594,
											"end": 5629,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5584,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5584,
											"end": 5586,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5641,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5633,
											"end": 5645,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5584,
											"end": 5586,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5584,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5574,
											"end": 5653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5574,
											"end": 5653,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addAllowance(address,uint256)": "f3c40c4b",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"receiveMoney()": "6d26ec18",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdrawMoney(address,uint256)": "f274c897"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveMoney\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Wallet/NewWallet.sol\":\"Wallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Wallet/NewWallet.sol\":{\"keccak256\":\"0xca0dae470403737443dd51ca57f49ec968b10346a2b388e5bcddb3d9347a7df8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://20540405115db30ac30395fd2049558ebe451fe84b66069d8846574fd1287e0b\",\"dweb:/ipfs/QmNZnDpE4BXtC2Q14T253QCW29nvRZA9y2TrJT83wuzVEK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 95,
								"contract": "Wallet/NewWallet.sol:Wallet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 8,
								"contract": "Wallet/NewWallet.sol:Wallet",
								"label": "allowance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 10,
								"contract": "Wallet/NewWallet.sol:Wallet",
								"label": "_owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 95,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Wallet/NewWallet.sol": {
				"ast": {
					"absolutePath": "Wallet/NewWallet.sol",
					"exportedSymbols": {
						"Context": [
							222
						],
						"Ownable": [
							200
						],
						"Wallet": [
							87
						]
					},
					"id": 88,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 88,
							"sourceUnit": 201,
							"src": "65:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 200,
										"src": "193:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "193:7:0"
								}
							],
							"contractDependencies": [
								200,
								222
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87,
								200,
								222
							],
							"name": "Wallet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "209:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 7,
										"keyType": {
											"id": 5,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "218:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "209:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 6,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "229:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "251:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "251:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "288:38:0",
										"statements": [
											{
												"expression": {
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "299:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 14,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "308:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "308:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "299:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "299:19:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:0"
									},
									"scope": 87,
									"src": "274:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "384:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 24,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "403:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 25,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "413:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "413:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "403:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 23,
												"id": 28,
												"nodeType": "Return",
												"src": "396:27:0"
											}
										]
									},
									"functionSelector": "8f32d59b",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "378:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 21,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:6:0"
									},
									"scope": 87,
									"src": "339:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "480:10:0",
										"statements": []
									},
									"functionSelector": "6d26ec18",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "480:0:0"
									},
									"scope": 87,
									"src": "441:49:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "572:53:0",
										"statements": [
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 43,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "590:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 45,
														"indexExpression": {
															"id": 44,
															"name": "_who",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "600:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "590:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 46,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "608:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "590:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "590:25:0"
											}
										]
									},
									"functionSelector": "f3c40c4b",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 41,
											"modifierName": {
												"id": 40,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "563:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "563:9:0"
										}
									],
									"name": "addAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "525:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "540:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:29:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:0:0"
									},
									"scope": 87,
									"src": "503:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "672:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 55,
																	"name": "isOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "691:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "691:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 57,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 8,
																		"src": "704:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 60,
																	"indexExpression": {
																		"expression": {
																			"id": 58,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "714:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 59,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "714:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "704:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 61,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "729:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "704:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "691:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420616c6c6f776564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "739:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c",
																"typeString": "literal_string \"You are not allowed\""
															},
															"value": "You are not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c",
																"typeString": "literal_string \"You are not allowed\""
															}
														],
														"id": 54,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "683:78:0"
											},
											{
												"id": 67,
												"nodeType": "PlaceholderStatement",
												"src": "772:1:0"
											}
										]
									},
									"id": 69,
									"name": "ownerOrAllowed",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "659:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "659:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:14:0"
									},
									"src": "635:146:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "880:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 79,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "895:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "895:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "895:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "895:21:0"
											}
										]
									},
									"functionSelector": "f274c897",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 76,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 73,
													"src": "872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 77,
											"modifierName": {
												"id": 75,
												"name": "ownerOrAllowed",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 69,
												"src": "857:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "857:23:0"
										}
									],
									"name": "withdrawMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "814:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "814:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "836:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "836:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "813:36:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:0:0"
									},
									"scope": 87,
									"src": "791:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 88,
							"src": "174:759:0"
						}
					],
					"src": "40:893:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							222
						],
						"Ownable": [
							200
						]
					},
					"id": 201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 89,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 90,
							"nodeType": "ImportDirective",
							"scope": 201,
							"sourceUnit": 223,
							"src": "127:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 92,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 222,
										"src": "683:7:1"
									},
									"id": 93,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:1"
								}
							],
							"contractDependencies": [
								222
							],
							"contractKind": "contract",
							"documentation": {
								"id": 91,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 200,
							"linearizedBaseContracts": [
								200,
								222
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 200,
									"src": "697:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 94,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 101,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "753:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "784:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:1"
									},
									"src": "726:84:1"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "926:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 106,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "955:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "936:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "936:32:1"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 111,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:1"
									},
									"scope": 200,
									"src": "912:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1084:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 114,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "1094:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:1"
											},
											{
												"id": 117,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:1"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 119,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:1"
									},
									"src": "1063:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1256:30:1",
										"statements": [
											{
												"expression": {
													"id": 125,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 95,
													"src": "1273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "1266:13:1"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:1"
									},
									"scope": 200,
									"src": "1201:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1404:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 133,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "1422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 135,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "1433:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:1"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:1"
									},
									"scope": 200,
									"src": "1359:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "1885:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 149,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 148,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1895:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 146,
											"modifierName": {
												"id": 145,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "1875:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:1"
									},
									"scope": 200,
									"src": "1831:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2151:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 165,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "2169:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 166,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2263:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 174,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "2244:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:1"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 162,
											"modifierName": {
												"id": 161,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "2141:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2108:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:1"
									},
									"scope": 200,
									"src": "2081:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "2496:124:1",
										"statements": [
											{
												"assignments": [
													186
												],
												"declarations": [
													{
														"constant": false,
														"id": 186,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "2506:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 185,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"id": 187,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 95,
													"src": "2525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:1"
											},
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 189,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2541:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 190,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "2550:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 194,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "2594:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 195,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "2604:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 193,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2573:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "EmitStatement",
												"src": "2568:45:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2461:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:1"
									},
									"scope": 200,
									"src": "2433:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 201,
							"src": "654:1968:1"
						}
					],
					"src": "102:2521:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							222
						]
					},
					"id": 223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 203,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 222,
							"linearizedBaseContracts": [
								222
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 208,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 207,
												"id": 210,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 222,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 217,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 216,
												"id": 219,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 222,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 223,
							"src": "608:235:2"
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			}
		}
	}
}